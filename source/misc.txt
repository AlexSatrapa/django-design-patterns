=================
Misc
=================

settings.py and localsettings.py
------------------------------------
The settings for your project which are a machine specific should be refactored
out of settings.py into localsettings.py. In your settings.py, you should do

try:
    from localsettings import *
except ImportError:
    print 'localsetting could not be imported'
    pass #Or raise
    
This should be at the end of settings.py, so that localsetting.py override
settings in settings.py

This file should not be checked in your repository.

Use relative path in settings.py
--------------------------------------
Instead of writing

    TEMPLATE_DIRS = '/home/user/project/templates'
    
Do

    #settings.py
    import os
    
    CURRENT_DIR = os.path.dirname(__file__)
    TEMPLATE_DIRS = os.path.join(CURRENT_DIR, 'template')


Use templatetags when the output doesnot depend on the Request
-------------------------------------------------------------------
In your sidebar suppose you want to show the 5 latest comments. You do not need
the request to output this. Make it as a templatetag.

Import as if your apps are on your project path
----------------------------------------------------
Instead of doing `from project.app.models import ModelClass` do `from app.models
import ModelClass`. Your apps are reusable

Naming things
-----------------

Model class names should be singular, not plural.

    class Post(models.Model):
        ...

and not
    
    class Posts(models.Model):
        ...

Foreign key should use the name of referenced class.

class Post(models.Model):
        user = models.ForeignKey(User)
        
Queryset should be plural, instances should be singular.

    posts = Post.objects.all()
    posts = Post.objects.filter(...)
    
    post = Post.object.get(pk = 5)
    post = Post.object.latest()
    
    




