=================
Misc
=================

settings.py and localsettings.py
------------------------------------
The settings for your project which are a machine specific should be refactored
out of settings.py into localsettings.py. In your settings.py, you should do::

    try:
        from localsettings import *
    except ImportError:
        print 'localsetting could not be imported'
        pass #Or raise
    
This should be at the end of settings.py, so that localsetting.py override
settings in settings.py

This file should not be checked in your repository.

Use relative path in settings.py
--------------------------------------
Instead of writing::

    TEMPLATE_DIRS = '/home/user/project/templates'
    
Do::

    #settings.py
    import os
    
    CURRENT_DIR = os.path.dirname(__file__)
    TEMPLATE_DIRS = os.path.join(CURRENT_DIR, 'template')


Use templatetags when the output doesnot depend on the Request
-------------------------------------------------------------------
In your sidebar suppose you want to show the 5 latest comments. You do not need
the request to output this. Make it as a templatetag.

Import as if your apps are on your project path
----------------------------------------------------
Instead of doing `from project.app.models import ModelClass` do `from app.models
import ModelClass`. Your apps are reusable

Naming things
-----------------

Model class names should be singular, not plural.::

    class Post(models.Model):
        ...

and not::
    
    class Posts(models.Model):
        ...

Foreign key should use the name of referenced class.::

    class Post(models.Model):
            user = models.ForeignKey(User)
        
Queryset should be plural, instances should be singular.::

    posts = Post.objects.all()
    posts = Post.objects.filter(...)
    
    post = Post.object.get(pk = 5)
    post = Post.object.latest()
    
Using pdb remotely
------------------------
Sometimes you will hit bugs which show up on servers but not on your local
system. To handle these, you need to debug on the server. Doing `manage.py
runserver` only allows local connections. To allow remote connections, use::

    python manage.py runserver 0.0.0.0:8000
    
So that your `pdb.set_trace()` which are on remote servers are hit when you access
them from your local systems.

Do not use primary keys in urls
-----------------------------------
If you use PK in urls you are giving away sensitive information, for example,
the number of entries in your table. It also makes it trivial to guess other urls.

If possible use Slugs in urls. This has the advantage of being both user and seo
friendly. 
    
If slugs do not make sense, instead use a CRC algorithm.::

    class Customer(models.Model):
        name = models.CharField(max_length = 100)
        
        def get_absolute_url(self):
            import zlib
            #Use permalink in real case
            return '/customer/%s/' % zlib.crc32(self.pk)
    




